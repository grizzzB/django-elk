version: '3.5'

services:

  web:
    container_name: web
    image: nginx:alpine
    #build:
    #  context: ./dockerfile
    #  dockerfile: web.Dockerfile
    depends_on:
      # `app`Because the service (container) needs to be started first`depends_on`Is specified
      - backend
      - frontend
    expose:
      - 80
    ports:
      #Port mapping:"Host OS port:container(Nginx)Port"
      - "80:80"
    #user: "${USER_ID}:${GROUP_ID}"
    volumes:
      #volume mount:"Host OS path:Path in the container"
      - ./.bashrc:/root/.bashrc
      - ./web/html:/etc/nginx/html
      - ./web/conf.d:/etc/nginx/conf.d
    networks:
      - nginx_network

  frontend:
        image: vue_frontend
        container_name: front
        build:
            context: ./dockerfile
            dockerfile: frontend.Dockerfile
        networks:
            - nginx_network
        volumes:
            - ./frontend:/frontend
            - /frontend/node_modules
        expose:
            - 8080
        ports:
            - 8080:8080
        command: /bin/sh -c "npm run serve"
        

  backend:
    container_name: was
    image: gunicorn-fastapi
    build:
      context: ./dockerfile
      dockerfile: backend.Dockerfile

    ports:
      - 8001:5000
    networks:
      - nginx_network
    expose:
      - 8000
    #For example, if you want to edit the source code in real time`volumes`Convenient to mount with
    volumes:
      - ./.bashrc:/root/.bashrc
      - ./fastapi/app:/code/app
    #of the app container`CMD`To overwrite`command`use
    command: "uvicorn app.main:app --reload --proxy-headers --host 0.0.0.0 --port 5000"

networks:
  nginx_network:
    driver: bridge

